{"version":3,"file":"static/webpack/static/development/pages/signup.js.e24731e32dda01481728.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react' ;\nimport { Form, Input, checkbox, Button } from 'antd' ;\n\n// momo를 이용한 지나친 최적화 (?)\n// const TextInput = memo(({ value, onChange }) => {\n//     return (\n//         <Input name=\"user-id\" value={id} requiered onChange={onChange} />\n//     ) ;\n// }) ;\n\nconst signup = () => {\n    const [id, setId] = useState('') ;\n    const [nick, setNick] = useState('') ;\n    const [password, setPassword] = useState('') ;\n    const [passwordCheck, setPasswordCheck] = useState('') ;\n    const [term, setTerm] = useState(false) ;\n    const [passwordError, setPasswordError] = useState(false) ;\n    const [termError, setTermError] = useState(false) ;\n\n    // 커스텀 훅스\n    /* const useInput = (initValue = null) => {\n        const [value, setter] = useState('') ;\n        const handler = e => {\n            setter(e.target.value) ;\n        } ;\n        return [value, handler] ;\n    } ;\n\n    const [id, onChangeId] = useInput('') ; \n    */\n    \n    const onSubmit = useCallback((e) => {\n        e.preventDefault() ;\n        if (password !== passwordCheck){\n            return setPasswordError(true) ;\n        }\n        if (!term) {\n            return setTermError(true) ;\n        }\n    }, [password, passwordCheck, term]) ;\n\n    const onChangeId = useCallback((e) => {\n        setId(e.target.value) ;\n    }, []) ;\n\n    const onChangeNick = useCallback((e) => {\n        setNick(e.target.value) ;\n    }, []) ;\n\n    const onChangePassWord = useCallback((e) => {\n        setPassword(e.target.value) ;\n    }, []);\n\n    const onChangePassWordCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password) ;\n        setPasswordCheck(e.target.value) ;\n    }, [password] );\n\n    const onChangeTerm = useCallback((e) => {\n        setTermError(false) ;\n        setTerm(e.target.checked)\n    }, [] );\n\n    return(\n    <>\n        <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n            </div>\n            <div>\n                <label htmlFor=\"user-nick\">닉네임</label>\n                <br />\n                <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassWord} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password-check\">비밀번호 체크</label>\n                <br />\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePassWordCheck} />\n                {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다. </div>}\n            </div>\n            <div>\n                <checkbox name=\"user-term\" value=\"term\" value={term} onChange={onChangeTerm}>1일 1컷일을 할 것을 동의합니다. </checkbox>\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\n            </div>\n            <div style={{ marginTop: 10 }}>\n                <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n            </div>\n        </Form>\n    </>\n    ) ;\n} ;\n\nexport default signup ;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;;;;;;;;;;;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}