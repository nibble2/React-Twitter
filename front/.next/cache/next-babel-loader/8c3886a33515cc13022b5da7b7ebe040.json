{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Documents/React-Twitter/front/pages/signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, checkbox, Button } from 'antd'; // momo를 이용한 지나친 최적화 (?)\n// const TextInput = memo(({ value, onChange }) => {\n//     return (\n//         <Input name=\"user-id\" value={id} requiered onChange={onChange} />\n//     ) ;\n// }) ;\n\nconst signup = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: nick,\n    1: setNick\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false); // 커스텀 훅스\n\n  /* const useInput = (initValue = null) => {\n      const [value, setter] = useState('') ;\n      const handler = e => {\n          setter(e.target.value) ;\n      } ;\n      return [value, handler] ;\n  } ;\n   const [id, onChangeId] = useInput('') ; \n  */\n\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordCheck, term]);\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangeNick = useCallback(e => {\n    setNick(e.target.value);\n  }, []);\n  const onChangePassWord = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const onChangePassWordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePassWordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"checkbox\", {\n    name: \"user-term\",\n    value: \"term\",\n    value: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"1\\uC77C 1\\uCEF7\\uC77C\\uC744 \\uD560 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4. \"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default signup;","map":{"version":3,"sources":["/Users/dana/Documents/React-Twitter/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Input","checkbox","Button","signup","id","setId","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","e","preventDefault","onChangeId","target","value","onChangeNick","onChangePassWord","onChangePassWordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react' ;\nimport { Form, Input, checkbox, Button } from 'antd' ;\n\n// momo를 이용한 지나친 최적화 (?)\n// const TextInput = memo(({ value, onChange }) => {\n//     return (\n//         <Input name=\"user-id\" value={id} requiered onChange={onChange} />\n//     ) ;\n// }) ;\n\nconst signup = () => {\n    const [id, setId] = useState('') ;\n    const [nick, setNick] = useState('') ;\n    const [password, setPassword] = useState('') ;\n    const [passwordCheck, setPasswordCheck] = useState('') ;\n    const [term, setTerm] = useState(false) ;\n    const [passwordError, setPasswordError] = useState(false) ;\n    const [termError, setTermError] = useState(false) ;\n\n    // 커스텀 훅스\n    /* const useInput = (initValue = null) => {\n        const [value, setter] = useState('') ;\n        const handler = e => {\n            setter(e.target.value) ;\n        } ;\n        return [value, handler] ;\n    } ;\n\n    const [id, onChangeId] = useInput('') ; \n    */\n    \n    const onSubmit = useCallback((e) => {\n        e.preventDefault() ;\n        if (password !== passwordCheck){\n            return setPasswordError(true) ;\n        }\n        if (!term) {\n            return setTermError(true) ;\n        }\n    }, [password, passwordCheck, term]) ;\n\n    const onChangeId = useCallback((e) => {\n        setId(e.target.value) ;\n    }, []) ;\n\n    const onChangeNick = useCallback((e) => {\n        setNick(e.target.value) ;\n    }, []) ;\n\n    const onChangePassWord = useCallback((e) => {\n        setPassword(e.target.value) ;\n    }, []);\n\n    const onChangePassWordCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password) ;\n        setPasswordCheck(e.target.value) ;\n    }, [password] );\n\n    const onChangeTerm = useCallback((e) => {\n        setTermError(false) ;\n        setTerm(e.target.checked)\n    }, [] );\n\n    return(\n    <>\n        <Form onSubmit={onSubmit} style={{ padding: 10 }}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n            </div>\n            <div>\n                <label htmlFor=\"user-nick\">닉네임</label>\n                <br />\n                <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassWord} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password-check\">비밀번호 체크</label>\n                <br />\n                <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePassWordCheck} />\n                {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다. </div>}\n            </div>\n            <div>\n                <checkbox name=\"user-term\" value=\"term\" value={term} onChange={onChangeTerm}>1일 1컷일을 할 것을 동의합니다. </checkbox>\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div>}\n            </div>\n            <div style={{ marginTop: 10 }}>\n                <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n            </div>\n        </Form>\n    </>\n    ) ;\n} ;\n\nexport default signup ;"]},"metadata":{},"sourceType":"module"}